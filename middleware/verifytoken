const jwt = require('jsonwebtoken');
const secret = 'secret'; // Assuming Jwt_secret is stored in '../db'

const verifyToken = (req, res, next) => {
    const { authorization } = req.headers;
    if (!authorization) {
        return res.status(401).json({ error: "Access denied. No token provided." });
    }

    const token = authorization.replace("Bearer ", ""); // Remove 'Bearer ' prefix
    jwt.verify(token, secret, (err, decoded) => {
        if (err) {
            return res.status(401).json({ error: "Invalid token" });
        }

        // Assuming decoded contains admin information
        req.admin = decoded; // Save decoded admin information in request object

        if (!req.admin || !req.admin.isAdmin) {
            return res.status(403).json({ message: "Unauthorized access" });
        }
        
        next();
    });
};

module.exports = verifyToken;